name: CI
on:
  push:
      branches:
          - 'dev'
          - 'main'
  pull_request:
      types: 
          - opened
      branches:
          - 'dev'
          - 'main'
jobs:
    build:
        runs-on: ubuntu-latest
        steps:      
          - name: Checkout project
            uses: actions/checkout@v2 
          - name: Cache node modules
            uses: actions/cache@v1
            with:
              path: ~/.npm
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}} 
              restore-keys: |
                ${{ runner.os }}-node-
          - name: Set up Node.js
            uses: actions/setup-node@v2
            with:
                node-version: 16
          - name: Install dependencies
            run: npm install
            working-directory: UI
          - name: Install Angular CLI
            run: npm install -g @angular/cli
          - name: Run automated tests
            run: ng test --browsers=ChromeHeadless --watch=false --code-coverage      
            working-directory: UI
          - name: Upload Test Coverage
            uses: actions/upload-artifact@v2
            with:
              name: code-coverage
              path: UI/coverage
          - name: Build Angular app
            if: github.event_name == 'push'
            run: ng build --configuration=production
            working-directory: UI
          - name: Upload build artifact
            if: github.event_name == 'push'
            uses: actions/upload-artifact@v2
            with:
                name: angular-app
                path: UI/dist/
    deploy:
      runs-on: ubuntu-latest
      needs: build      
      steps:
        - name: Download build from the build job
          if: github.event_name == 'push'
          uses: actions/download-artifact@v3
          with:
            name: angular-app
            path: UI/dist/
        - name: Display structure of downloaded files
          run: ls -R
          working-directory: UI/dist/
        - name: Create a Release
          if: github.event_name == 'push' && github.ref == 'refs/heads/main'
          run: npx semantic-release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
